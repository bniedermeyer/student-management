{"version":3,"sources":["App.js","components/hoc/StyledLink.js","pages/Home.js","services/student-utils.js","components/StudentFilter.js","components/Student.js","components/StudentList.js","pages/Students.js","pages/AddStudent.js","serviceWorker.js","index.js","assets/undraw_exams_g4ow.svg"],"names":["NavLink","props","getProps","style","color","isCurrent","App","className","Pane","display","padding","background","borderRadius","flex","alignItems","Heading","size","to","process","Text","marginRight","children","StyledLink","textDecoration","Home","margin","is","height","src","image","alt","Paragraph","justifyContent","Card","elevation","hoverElevation","flexDirection","searchForStudents","filters","a","async","url","key","filtersString","hasOwnProperty","value","length","fetch","result","json","saveStudentToDatabase","student","method","body","JSON","stringify","response","StudentFilter","defaultFilter","name","active","homeCountry","exchangeCountry","homeUni","gpa","useState","filter","setFilter","updateSearchFilter","fieldName","updatedFilter","border","minorScale","onSubmit","e","preventDefault","submitFilter","flexWrap","TextInputField","label","onChange","target","SelectField","Button","appearance","iconBefore","type","onClick","Student","marginBottom","width","borderRight","Badge","textAlign","StudentList","element","studentList","students","map","id","listStyle","loading","Spinner","marginTop","Students","setStudents","error","setError","searchFilter","setSearchFilter","setLoading","useEffect","studentResults","performSearch","message","majorScale","AddStudent","defaultStudent","setStudent","updateStudent","field","updatedStudent","marginLeft","toaster","success","saveStudent","gridTemplateColumns","RadioGroup","options","Boolean","window","location","hostname","match","ReactDOM","render","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.a1137019.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from '@reach/router';\nimport { Pane, Text, Heading } from 'evergreen-ui';\n\nimport './App.css';\n\nconst NavLink = props => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      return {\n        style: {\n          color: isCurrent ? 'red' : 'blue'\n        }\n      };\n    }}\n  />\n);\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <header>\n        <nav>\n          <Pane display=\"flex\" padding={16} background=\"tint2\" borderRadius={3}>\n            <Pane flex={1} alignItems=\"center\" display=\"flex\">\n              <Heading size={600}>Student Management</Heading>\n            </Pane>\n            <Pane>\n              <NavLink to={process.env.PUBLIC_URL + '/'}>\n                <Text marginRight={16}>Home</Text>\n              </NavLink>\n              <NavLink to={process.env.PUBLIC_URL + '/students'}>\n                <Text marginRight={16}>Student Search</Text>\n              </NavLink>\n              <NavLink to={process.env.PUBLIC_URL + '/add-student'}>\n                <Text>Add Student</Text>\n              </NavLink>\n            </Pane>\n          </Pane>\n        </nav>\n      </header>\n      {props.children}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nconst StyledLink = props => (\n  <Link\n    {...props}\n    getProps={({ isCurrent }) => {\n      return {\n        style: {\n          textDecoration: 'none'\n        }\n      };\n    }}\n  />\n);\n\nexport default StyledLink;\n","import React from 'react';\nimport { Card, Pane, Heading, Paragraph } from 'evergreen-ui';\nimport StyledLink from '../components/hoc/StyledLink';\nimport image from '../assets/undraw_exams_g4ow.svg';\n\nconst Home = () => (\n  <Pane>\n    <Heading size={900} margin={50} is=\"h1\">\n      Welcome to the Student Management Suite!\n    </Heading>\n    <img height={250} src={image} alt=\"animation of students studying\" />\n    <Paragraph margin={50}>Please choose from the options below</Paragraph>\n\n    <Pane\n      height={'100%'}\n      display=\"flex\"\n      justifyContent=\"center\"\n      className=\"cards\"\n    >\n      <Card\n        elevation={1}\n        hoverElevation={4}\n        padding={50}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        margin={25}\n        background=\"blueTint\"\n      >\n        <StyledLink to={process.env.PUBLIC_URL + '/students'}>\n          <Heading>Student Search</Heading>\n        </StyledLink>\n      </Card>\n      <Card\n        elevation={1}\n        hoverElevation={4}\n        padding={50}\n        display=\"flex\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        flexDirection=\"column\"\n        margin={25}\n        background=\"blueTint\"\n      >\n        <StyledLink to={process.env.PUBLIC_URL + '/add-student'}>\n          <Heading>Add a Student</Heading>\n        </StyledLink>\n      </Card>\n    </Pane>\n  </Pane>\n);\n\nexport default Home;\n","/**\n * Queries the mock json server for entries that match the givern filters.\n * @param  filters\n */\nconst searchForStudents = async filters => {\n  // todo: add paging for search - since this is a demo project it's ok. In a larger app you'd need a way to not be drowned by the load of results\n  let url =\n    'https://my-json-server.typicode.com/bniedermeyer/student-management/students';\n\n  if (filters) {\n    let filtersString = '';\n    for (const key in filters) {\n      if (filters.hasOwnProperty(key)) {\n        const value = filters[key];\n\n        if (value.length > 0) {\n          if (filtersString.length > 0) {\n            filtersString += '&';\n          }\n          filtersString += `${key}_like=${value}`;\n        }\n      }\n    }\n\n    if (filtersString.length > 0) {\n      url += `?${filtersString}`;\n    }\n  }\n\n  const result = await fetch(url);\n  return await result.json();\n};\n\n/**\n * sends a POST request to the json server to add the student to the database.\n * Note - because the project uses my-json-server to host the mock DB, the response is faked by\n * the server and not persisted\n * @param  student\n */\nconst saveStudentToDatabase = async student => {\n  let url =\n    'https://my-json-server.typicode.com/bniedermeyer/student-management/students';\n\n  const response = await fetch(url, {\n    method: 'POST',\n    body: JSON.stringify(student)\n  });\n\n  return await response.json();\n};\n\nexport { searchForStudents, saveStudentToDatabase };\n","import React, { useState } from 'react';\nimport {\n  Card,\n  Pane,\n  TextInputField,\n  minorScale,\n  Button,\n  SelectField\n} from 'evergreen-ui';\n\nexport default function StudentFilter(props) {\n  const defaultFilter = {\n    name: '',\n    active: '',\n    homeCountry: '',\n    exchangeCountry: '',\n    homeUni: '',\n    gpa: ''\n  };\n\n  const [filter, setFilter] = useState(defaultFilter);\n\n  const updateSearchFilter = (fieldName, value) => {\n    const updatedFilter = { ...filter, [fieldName]: value };\n\n    setFilter(updatedFilter);\n  };\n\n  const submitFilter = e => {\n    e.preventDefault();\n\n    props.setFilter(filter);\n  };\n\n  const clearFilter = () => {\n    setFilter(defaultFilter);\n    props.setFilter(defaultFilter);\n  };\n\n  return (\n    <Card elevation={3} border padding={minorScale(8)}>\n      <form onSubmit={e => submitFilter(e)}>\n        <Pane\n          display=\"flex\"\n          flexWrap=\"wrap\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <TextInputField\n            label=\"Name\"\n            value={filter.name}\n            marginRight={minorScale(2)}\n            onChange={e => updateSearchFilter('name', e.target.value)}\n          />\n          <TextInputField\n            label=\"Home Country\"\n            value={filter.homeCountry}\n            marginRight={minorScale(2)}\n            onChange={e => updateSearchFilter('homeCountry', e.target.value)}\n          />\n          <TextInputField\n            label=\"Home University\"\n            value={filter.homeUni}\n            marginRight={minorScale(2)}\n            onChange={e => updateSearchFilter('homeUni', e.target.value)}\n          />\n          <TextInputField\n            label=\"ExchangeCountry\"\n            value={filter.exchangeCountry}\n            marginRight={minorScale(2)}\n            onChange={e =>\n              updateSearchFilter('exchangeCountry', e.target.value)\n            }\n          />\n          <SelectField\n            label=\"Active\"\n            onChange={e => updateSearchFilter('active', e.target.value)}\n            marginRight={minorScale(2)}\n            value={filter.active}\n          >\n            <option value=\"\">-</option>\n            <option value={true}>Active</option>\n            <option value={false}>Not Active</option>\n          </SelectField>\n        </Pane>\n\n        <Button\n          marginRight={16}\n          appearance=\"primary\"\n          iconBefore=\"search\"\n          type=\"submit\"\n        >\n          Search\n        </Button>\n        <Button onClick={() => clearFilter()}>Clear</Button>\n      </form>\n    </Card>\n  );\n}\n","import React from 'react';\nimport { Pane, Heading, Badge, minorScale } from 'evergreen-ui';\n\nconst Student = props => {\n  if (!props.student) {\n    return null;\n  }\n  const student = props.student;\n\n  return (\n    <Pane border marginBottom={10} display=\"flex\" width=\"100%\">\n      <Pane\n        borderRight\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"flex-start\"\n        padding={minorScale(5)}\n      >\n        <Heading size={600}>{student.name}</Heading>\n      </Pane>\n      <Pane padding={minorScale(5)}>\n        <Badge color={student.active ? 'neutral' : 'red'} marginBottom={5}>\n          {student.active ? 'Active' : 'Not Active'}\n        </Badge>\n        <ul style={{ textAlign: 'left' }}>\n          <li>Home Country: {student.homeCountry}</li>\n          <li>Home University: {student.homeUni}</li>\n          <li>Exchange Country Country: {student.exchangeCountry}</li>\n          <li>GPA: {student.gpa}</li>\n        </ul>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default Student;\n","import React from 'react';\nimport { Heading, Pane, Spinner } from 'evergreen-ui';\n\nimport Student from '../components/Student';\n\nexport default function StudentList(props) {\n  let element = null;\n\n  const studentList = props.students.map(student => {\n    return (\n      <li key={student.id}>\n        <Student student={student} />\n      </li>\n    );\n  });\n  element = <ul style={{ listStyle: 'none' }}>{studentList}</ul>;\n  if (props.loading) {\n    element = <Spinner />;\n  }\n  if (props.students.length === 0) {\n    element = <Heading>No Results Found</Heading>;\n  }\n  return (\n    <Pane\n      marginTop={20}\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n    >\n      {element}\n    </Pane>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Pane, Heading, majorScale } from 'evergreen-ui';\n\nimport { searchForStudents } from '../services/student-utils';\nimport StudentFilter from '../components/StudentFilter';\nimport StudentList from '../components/StudentList';\n\nconst Students = () => {\n  const [students, setStudents] = useState([]);\n  const [error, setError] = useState(null);\n  const [searchFilter, setSearchFilter] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const performSearch = async () => {\n      setLoading(true);\n      try {\n        const studentResults = await searchForStudents(searchFilter);\n        setStudents(studentResults);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    performSearch();\n  }, [searchFilter]);\n\n  if (error) {\n    return (\n      <div>\n        Error Searching<div>{error.message}</div>\n      </div>\n    );\n  }\n\n  return (\n    <Pane padding={majorScale(4)}>\n      <Heading size={900} is=\"h1\">\n        Student Search\n      </Heading>\n      <Pane\n        display=\"flex\"\n        flexDirection=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className=\"filterContainer\"\n        width=\"100%\"\n      >\n        <StudentFilter setFilter={e => setSearchFilter(e)}></StudentFilter>\n        <StudentList\n          students={students}\n          loading={loading}\n          marginTop={majorScale(3)}\n        ></StudentList>\n      </Pane>\n    </Pane>\n  );\n};\n\nexport default Students;\n","import React, { useState } from 'react';\nimport {\n  Pane,\n  Heading,\n  Card,\n  Button,\n  TextInputField,\n  minorScale,\n  RadioGroup,\n  toaster\n} from 'evergreen-ui';\n\nimport { saveStudentToDatabase } from '../services/student-utils';\n\nconst AddStudent = () => {\n  const defaultStudent = {\n    name: '',\n    active: 'true',\n    homeCountry: '',\n    exchangeCountry: '',\n    homeUni: '',\n    gpa: ''\n  };\n  const [student, setStudent] = useState(defaultStudent);\n\n  const updateStudent = (field, value) => {\n    const updatedStudent = { ...student, [field]: value };\n    setStudent(updatedStudent);\n  };\n\n  const saveStudent = async e => {\n    e.preventDefault();\n    await saveStudentToDatabase(student);\n    toaster.success('Student Created');\n  };\n\n  return (\n    <Pane>\n      <Heading size={900} is=\"h1\">\n        Add a Student\n      </Heading>\n      <Card\n        elevation={3}\n        border\n        padding={minorScale(8)}\n        width=\"50%\"\n        marginLeft=\"25%\"\n        marginTop={minorScale(4)}\n        textAlign=\"left\"\n      >\n        <form onSubmit={e => saveStudent(e)}>\n          <Pane display=\"grid\" gridTemplateColumns=\"repeat(2, auto)\">\n            <TextInputField\n              label=\"Name\"\n              value={student.name}\n              marginRight={minorScale(2)}\n              onChange={e => updateStudent('name', e.target.value)}\n            />\n            <TextInputField\n              label=\"Home Country\"\n              value={student.homeCountry}\n              marginRight={minorScale(2)}\n              onChange={e => updateStudent('homeCountry', e.target.value)}\n            />\n            <TextInputField\n              label=\"Home University\"\n              value={student.homeUni}\n              marginRight={minorScale(2)}\n              onChange={e => updateStudent('homeUni', e.target.value)}\n            />\n            <TextInputField\n              label=\"ExchangeCountry\"\n              value={student.exchangeCountry}\n              marginRight={minorScale(2)}\n              onChange={e => updateStudent('exchangeCountry', e.target.value)}\n            />\n            <TextInputField\n              label=\"GPA\"\n              value={student.gpa}\n              marginRight={minorScale(2)}\n              onChange={e => updateStudent('gpa', e.target.value)}\n            />\n            <RadioGroup\n              label=\"Active\"\n              value={student.active}\n              options={[\n                { label: 'Active', value: 'true' },\n                { label: 'Inactive', value: 'false' }\n              ]}\n              onChange={value => updateStudent('active', value)}\n            />\n          </Pane>\n          <Pane display=\"flex\" justifyContent=\"flex-end\">\n            <Button\n              type=\"button\"\n              onClick={() => setStudent(defaultStudent)}\n              marginRight={minorScale(2)}\n            >\n              Reset Form\n            </Button>\n            <Button\n              marginRight={16}\n              appearance=\"primary\"\n              iconBefore=\"save\"\n              type=\"submit\"\n            >\n              Save\n            </Button>\n          </Pane>\n        </form>\n      </Card>\n    </Pane>\n  );\n};\n\nexport default AddStudent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Home from './pages/Home';\nimport Students from './pages/Students';\nimport AddStudent from './pages/AddStudent';\nimport { Router } from '@reach/router';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App path=\"/\">\n      <Home path={process.env.PUBLIC_URL + '/'} />\n      <Students path={process.env.PUBLIC_URL + '/students'} />\n      <AddStudent path={process.env.PUBLIC_URL + '/add-student'} />\n    </App>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/undraw_exams_g4ow.6e98631b.svg\";"],"sourceRoot":""}